/*
 * Copyright (c) 2025 JShorelark Contributors
 *
 * Licensed under the same terms as the original Shorelark project.
 * See: https://github.com/patryk27/shorelark
 */
package io.jshorelark.optimizer;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;

import io.jshorelark.simulation.Config;

import lombok.Builder;
import lombok.Value;

/**
 * Configuration for optimization. Matches Rust's OptConfig struct.
 *
 * @author Jose
 * @version $Id: $Id
 */
@Value
@Builder
@JsonDeserialize(builder = OptimizationConfig.OptimizationConfigBuilder.class)
public class OptimizationConfig {
  /** Number of neurons in each bird's brain. */
  @JsonProperty("c")
  int brainNeurons;

  /** Field of view range. */
  @JsonProperty("d")
  float eyeFovRange;

  /** Field of view angle. */
  @JsonProperty("e")
  float eyeFovAngle;

  /** Number of eye cells in each bird. */
  @JsonProperty("f")
  int eyeCells;

  /** Mutation chance for genetic algorithm. */
  @JsonProperty("g")
  float gaMutChance;

  /** Mutation coefficient for genetic algorithm. */
  @JsonProperty("h")
  float gaMutCoeff;

  /**
   * Converts this to a simulation config.
   *
   * @return a {@link io.jshorelark.simulation.Config} object
   */
  public Config toSimulationConfig() {
    return Config.builder()
        .brainNeurons(brainNeurons)
        .eyeFovRange(eyeFovRange)
        .eyeFovAngle(eyeFovAngle)
        .eyeCells(eyeCells)
        .gaMutChance(gaMutChance)
        .gaMutCoeff(gaMutCoeff)
        .build();
  }

  @JsonPOJOBuilder(withPrefix = "")
  public static class OptimizationConfigBuilder {
    // Builder will be generated by Lombok
  }
}
